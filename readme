Assignment 5 readme File

------------------------------------------------------------------------
Student 1: What is your name?



------------------------------------------------------------------------
Student 2: What is your name?



------------------------------------------------------------------------
Student 1: What authorized sources of information did you use to
complete the assignment? COPY THE LIST of authorized sources of
information given in the "Policies" web page (also available on armlab
in the file ~cos217/AuthorizedSourcesList ) to this section of the
readme file, and edit it as appropriate.



------------------------------------------------------------------------
Student 2: What authorized sources of information did you use to
complete the assignment? COPY THE LIST of authorized sources of
information given in the "Policies" web page (also available on armlab
in the file ~cos217/AuthorizedSourcesList ) to this section of the
readme file, and edit it as appropriate.



------------------------------------------------------------------------
Student 1: What unauthorized sources of information did you use to
complete the assignment? List any unauthorized sources of information
that you used to complete the assignment, and describe how you used
them. The course "Policies" web page defines unauthorized sources of
information, and any source that you have used but not listed in the
authorized sources should be included here. Please note that using an
unauthorized source may trigger a course penalty, and depending on the
nature of the interaction, may additionally require the interaction
being reported to the Committee on Discipline. Write "None" if you used
no unauthorized sources of information.



------------------------------------------------------------------------
Student 2: What unauthorized sources of information did you use to
complete the assignment? List any unauthorized sources of information
that you used to complete the assignment, and describe how you used
them. The course "Policies" web page defines unauthorized sources of
information, and any source that you have used but not listed in the
authorized sources should be included here. Please note that using an
unauthorized source may trigger a course penalty, and depending on the
nature of the interaction, may additionally require the interaction
being reported to the Committee on Discipline. Write "None" if you used
no unauthorized sources of information.



------------------------------------------------------------------------
Student 1: What is your assessment of the assignment? Was it helpful?
Was it fun?



------------------------------------------------------------------------
Student 2: What is your assessment of the assignment? Was it helpful?
Was it fun?



------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?



------------------------------------------------------------------------
What is your mywc program test plan?

We created several tests to check that our code works as expected.
Boundary tests:
mywcEmpty.txt - an empty file. Ensures that all counts are 0 in the
case of an empty input file.

mywcJustLetters.txt - a string of letters with no spaces or newlines.
Ensures that the word count is 1 and the newline count is 0 for when no
spaces or newline characters have been read.

mywcJustSpaces.txt - 15 spaces. Ensures that our code works for more than
one space in a row, and that the word count is 0 (doesn't increment) when
more space characters have been read (no matter how many in a row).

mywcJustNewlines.txt - 15 newline characters. Ensures that our code counts
newline characters, and that the word count is 0 (doesn't increment) when
more newline characters are read (no matter how many in a row).

Statement tests:
mywcOneLetter.txt - one letter. Checks that our code executes lines 28-33
and 42-45 and 52-56 (skips the if blocks after executing lines 34, 48).

mywcOneSpace.txt - one space. Checks that our code executes lines 28-36
and 55-56 (skips the if blocks after executing lines 48, 52).

mywcOneNewline.txt - one newline. Checks that our code executes lines 28-33
and 48-49 and 55-56 (skips the if blocks after executing lines 34, 44, 52).

mywcOneOfEach.txt - one letter, one space, and one newline. Checks that our
code executes lines 28-33, 42-46 on the first pass through the while loop
and then 34-41 on the second pass and then lines 48-49 on the third pass.
Also checks that lines 55-56 are executed.

mywcLSN.txt - letter, space, newline pattern. Executes the same lines of
code as executed in mywcOneOfEach.txt but multiple times in a row. Checks
to make sure our program works for inputs larger than one word and newline.

mywcTwoWords.txt - "Hello World" - Checks that our code executes lines
28-33, 42-46 while in each word and 34-41 when it reaches the space and
Also checks that lines 55-56 are executed. Checks that our code works for
words longer than one letter, and that our code works when it ends in the
iInWord state. 

mywcProverb.txt - a combination of words, spaces, and newlines that executes
all lines of mywc.c except for line 53. Checks that our code works for longer
inputs with varying combinations of words, spaces, and newlines.

mywcProverb2.txt - same as mywcProverb.txt except that the code ends in the
iInWord state and thus line 53 should be executed. Checks that our code works
for longer inputs with varying combinations of words, spaces, and newlines.

Stress tests:
mywcLong.txt - a long excerpt from Sherlock Holmes containing a random
assortment of characters - letters, spaces, newlines, etc. Tests that
our code works for long input files.

mywcLonger.txt - an even longer excerpt from Sherlock Holmes containing
a random assortment of characters - letters, spaces, newlines, etc.
Tests that our code works for very long input files.

mywcRandShort.txt - a text file generated using rand() characters.
Checks to make sure our program works on random input.

mywcRandShort.txt - a long text file generated using rand() characters.
Checks to make sure our program works on random input and on long input
files.

------------------------------------------------------------------------
What are the CPU times consumed by the programs from Parts 2a, 2b, 2d,
2e, and 2f to compute fib(250000) on armlab? Fill in the blanks.

Part 2a:  11.930031 seconds

Part 2b:  2.639984 seconds

Part 2d:  10.544093 seconds

Part 2e:  4.089511 seconds

Part 2f:  3.142852 seconds




